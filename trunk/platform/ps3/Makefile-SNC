# specify build tools
CELL_BUILD_TOOLS	= SNC
#explicitly set some cell sdk defaults
CELL_SDK		?= /usr/local/cell
# CELL_GPU_TYPE (currently RSX is only one option)
CELL_GPU_TYPE		= RSX
#CELL_PSGL_VERSION is debug, dpm or opt
CELL_PSGL_VERSION	= ultra-opt

#Python binary - only useful for PSL1ght scripts
PYTHONBIN		= python2.7

CELL_MK_DIR		?= $(CELL_SDK)/samples/mk
include $(CELL_MK_DIR)/sdk.makedef.mk
#CELL_HOST_PATH		?= $(CELL_SDK)/host-win32
MKFSELF			= $(CELL_HOST_PATH)/bin/make_fself
MKFSELF_NPDRM		= $(CELL_HOST_PATH)/bin/make_fself_npdrm
MKPKG_NPDRM		= $(CELL_HOST_PATH)/bin/make_package_npdrm

# Geohot CFW defines
MKSELF_GEOHOT		= make_self_npdrm
MKPKG_PSLIGHT		= buildtools/PS3Py/pkg.py
PKG_FINALIZE		= package_finalize

STRIP			= $(CELL_HOST_PATH)/ppu/bin/ppu-lv2-strip
COPY			= cp
MOVE			= mv
C			= $(CELL_HOST_PATH)/ppu/bin/ppu-lv2-gcc
CC			= $(CELL_HOST_PATH)/ppu/bin/ppu-lv2-g++

UTILS_DIR            = ./utils
SRC_DIR              = ./src
VBA_API_DIR       = ./src/vba
CELL_FRAMEWORK_DIR	= ./src/cellframework
CELL_FRAMEWORK2_DIR	= ./src/cellframework2

PPU_SRCS		+= 	$(foreach dir,$(VBA_API_DIR)/gba/,$(wildcard $(dir)/*.cpp)) \
                  $(foreach dir,$(VBA_API_DIR)/apu/,$(wildcard $(dir)/*.cpp)) \
                  $(foreach dir,$(VBA_API_DIR)/common/,$(wildcard $(dir)/*.cpp)) \
                  $(foreach dir,$(VBA_API_DIR)/gb/,$(wildcard $(dir)/*.cpp)) \
                  $(VBA_API_DIR)/Util.cpp

PPU_SRCS		+= $(foreach dir,$(UTILS_DIR)/7z_C/,$(wildcard $(dir)/*.c)) \
            $(foreach dir,$(UTILS_DIR)/fex/,$(wildcard $(dir)/*.cpp)) \
            $(foreach dir,$(UTILS_DIR)/unrar/,$(wildcard $(dir)/*.cpp)) \
            $(foreach dir,$(UTILS_DIR)/zlib/,$(wildcard $(dir)/*.c))

PPU_SRCS    +=  $(foreach dir,$(CELL_FRAMEWORK_DIR)/audio/,$(wildcard $(dir)/*.cpp)) \
         $(foreach dir,$(CELL_FRAMEWORK_DIR)/graphics/,$(wildcard $(dir)/*.cpp)) \
         $(foreach dir,$(CELL_FRAMEWORK_DIR)/input/,$(wildcard $(dir)/*.cpp)) \
         $(foreach dir,$(CELL_FRAMEWORK_DIR)/utility/,$(wildcard $(dir)/*.cpp)) \
         $(foreach dir,$(CELL_FRAMEWORK_DIR)/threads/,$(wildcard $(dir)/*.cpp)) \
         $(foreach dir,$(CELL_FRAMEWORK_DIR)/fileio/,$(wildcard $(dir)/*.cpp))

PPU_SRCS += $(foreach dir,$(SRC_DIR),$(wildcard $(dir)/*.cpp)) \
            $(foreach dir,$(SRC_DIR)/conf/,$(wildcard $(dir)/*.cpp))

PPU_TARGET		= vba-ps3.ppu.elf

#debug options, set 1 to enable
BRANCHLESS_GBA_GFX = 1
CELL_DEBUG_CONSOLE = 0
CELL_DEBUG_FPS     = 1
VBA_PS3_EXPERIMENTAL_ISEL = 1
VBA_WII_CORE_OPTIMIZATIONS = 1

PPU_CFLAGS		   += -I. -I./src/ -I$(VBA_API_DIR) -I./utils/ -I./utils/fex -I./utils/zlib -I./utils/unrar -DUSE_FILE32API -Dunix -DPSGL -O2 -DCORRECT_VRAM_READS -DRIGHTSHIFT_IS_SAR -DSN_TARGET_PS3 -DNDEBUG=1 -DWORDS_BIGENDIAN -DBLARGG_BIG_ENDIAN=1 -D__POWERPC__ -D__ppc__ -D__CELLOS_LV2__ -DBLARGG_BIG_ENDIAN=1 -DFEX_ENABLE_RAR -DGEKKO -DPATH_MAX=1024
PPU_CXXFLAGS		+= -I./src/ -I$(VBA_API_DIR) -I./utils/ -I./utils/fex -I./utils/zlib -I./utils/unrar -DZLIB -DUNZIP_SUPPORT -DJMA_SUPPORT -DPSGL -O2 -DCORRECT_VRAM_READS -DRIGHTSHIFT_IS_SAR -DSN_TARGET_PS3 -DNDEBUG=1 -DWORDS_BIGENDIAN -DBLARGG_BIG_ENDIAN=1 -D__POWERPC__ -D__ppc__ -DCELLOS_LV2__ -DBLARGG_BIG_ENDIAN=1 -DFEX_ENABLE_RAR -DGEKKO -DPATH_MAX=1024

# VBA optimization flags
PPU_CXXFLAGS		+= -DFINAL_VERSION -D__ppc__ -DSPEEDHAX -D__POWERPC__ -DWORDS_BIGENDIAN
PPU_CFLAGS		+= -DFINAL_VERSION -D__ppc__ -DSPEEDHAX -D__POWERPC__ -DWORDS_BIGENDIAN

# VBA must define
PPU_CXXFLAGS		+= -Dlinux -DHAVE_NETINET_IN_H -DHAVE_ARPA_INET_H
PPU_CFLAGS		+= -Dlinux -DHAVE_NETINET_IN_H -DHAVE_ARPA_INET_H
PPU_CXXFLAGS		+= -D__need_timeval
PPU_CFLAGS		+= -D__need_timeval

# use 7z less mem intensive
PPU_CXXFLAGS		+= -D_SZ_ONE_DIRECTORY -D_LZMA_IN_CB -D_LZMA_OUT_READ
PPU_CFLAGS		+= -D_SZ_ONE_DIRECTORY -D_LZMA_IN_CB -D_LZMA_OUT_READ

ifeq ($(CELL_BUILD_TOOLS),SNC)
PPU_CFLAGS		+= -Xbranchless=1 -Xfastmath=1 -Xassumecorrectsign=1 -Xassumecorrectalignment=1 \
			-Xunroll=1 -Xautovecreg=1 
PPU_CXXFLAGS		+= -Xbranchless=1 -Xfastmath=1 -Xassumecorrectsign=1 -Xassumecorrectalignment=1 \
			 -Xunroll=1 -Xautovecreg=1
else
#PPU_CFLAGS		   += -funroll-loops
#PPU_CXXFLAGS		+= -funroll-loops
PPU_CXXFLAGS		+= -O3 \
			-ffast-math \
			-finline-functions \
			-funit-at-a-time \
			--param inline-unit-growth=200 \
			--param large-function-growth=1000 \
			--param max-inline-insns-single=450
					
PPU_CFLAGS		+= -O3 \
			-ffast-math \
			-finline-functions \
			-funit-at-a-time \
			--param inline-unit-growth=200 \
			--param large-function-growth=1000 \
			--param max-inline-insns-single=450
endif

ifeq ($(CELL_DEBUG_CONSOLE),1)
PPU_CFLAGS     += -DCELL_DEBUG_CONSOLE
PPU_CXXFLAGS   += -DCELL_DEBUG_CONSOLE
L_CONTROL_CONSOLE_LDLIBS = -lcontrol_console_ppu
L_NET_CTL_LDLIBS = -lnetctl_stub
endif

ifeq ($(CELL_DEBUG_FPS),1)
PPU_CFLAGS     += -DCELL_DEBUG_FPS
PPU_CXXFLAGS   += -DCELL_DEBUG_FPS
endif

ifeq ($(VBA_PS3_EXPERIMENTAL_ISEL),1)
PPU_CFLAGS     += -DVBA_PS3_EXPERIMENTAL_ISEL=1
PPU_CXXFLAGS   += -DVBA_PS3_EXPERIMENTAL_ISEL=1
endif

ifeq ($(VBA_WII_CORE_OPTIMIZATIONS),1)
PPU_CFLAGS     += -DVBA_WII_CORE_OPTIMIZATIONS=1
PPU_CXXFLAGS   += -DVBA_WII_CORE_OPTIMIZATIONS=1
endif

PPU_LDLIBS		+= -L. -L$(CELL_SDK)/target/ppu/lib/PSGL/RSX/opt -ldbgfont -lPSGL -lPSGLcgc -lcgc \
			-lgcm_cmd -lgcm_sys_stub -lresc_stub -lm -lio_stub -lfs_stub -lsysutil_stub $(L_CONTROL_CONSOLE_LDLIBS) \
			-lsysmodule_stub -laudio_stub -lpthread -lnet_stub $(L_NET_CTL_LDLIBS)

include $(CELL_MK_DIR)/sdk.target.mk

.PHONY: pkg
#standard pkg packaging
pkg: $(PPU_TARGET)
	$(STRIP) $(PPU_TARGET) 
	$(MKFSELF_NPDRM) $(PPU_TARGET) pkg/USRDIR/EBOOT.BIN
	$(MKPKG_NPDRM) pkg/package.conf pkg

#massively reduced filesize using MKSELF_GEOHOT - use this for normal jailbreak builds
pkg-signed: $(PPU_TARGET) 
	$(MKSELF_GEOHOT) $(PPU_TARGET) EBOOT.BIN VBAM900000
	$(MOVE) -f EBOOT.BIN pkg/USRDIR/EBOOT.BIN
	$(PYTHONBIN) $(MKPKG_PSLIGHT) --contentid IV0002-VBAM90000_00-SAMPLE0000000001 pkg/ vba-ps3.pkg

#use this to create a PKG for use with Geohot CFW 3.55
pkg-signed-cfw: $(PPU_TARGET)
	$(MKSELF_GEOHOT) $(PPU_TARGET) EBOOT.BIN VBAM900000
	$(MOVE) -f EBOOT.BIN pkg/USRDIR/EBOOT.BIN
	$(PYTHONBIN) $(MKPKG_PSLIGHT) --contentid IV0002-VBAM90000_00-SAMPLE0000000001 pkg/ vba-ps3-cfw.pkg
	$(PKG_FINALIZE) vba-ps3-cfw.pkg
